Linking to GEOS 3.6.2, GDAL 2.2.1, PROJ 4.9.3

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.3     ✔ stringr 1.4.0
✔ tidyr   1.1.0     ✔ forcats 0.5.0
✔ readr   1.3.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
Linking to liblwgeom 3.0.0beta1 r16016, GEOS 3.6.2, PROJ 4.9.3
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
There were 50 or more warnings (use warnings() to see the first 50)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_logical(),
  kba = col_logical(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  percPA = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_logical(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_logical(),
  in_gmba = col_logical(),
  note = col_character()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_character(),
  in_gmba = col_logical(),
  note = col_character(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
Parsed with column specification:
cols(
  SitRecID = col_double(),
  kba = col_double(),
  ovl = col_double(),
  year = col_double(),
  random = col_logical(),
  nPAs = col_double(),
  DOMAIN = col_double(),
  range_countries = col_character(),
  RangeName = col_character(),
  COUNTRY = col_character(),
  multiple_ranges = col_logical(),
  all_gmba_intersec = col_double(),
  in_gmba = col_logical(),
  note = col_logical(),
  percPA = col_double()
)
although coordinates are longitude/latitude, st_intersects assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_difference assumes that they are planar
although coordinates are longitude/latitude, st_intersection assumes that they are planar
There were 50 or more warnings (use warnings() to see the first 50)
Warning message:
Unknown or uninitialised column: `x`. 
